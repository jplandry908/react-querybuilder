name: CI

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'packages/**'
  pull_request:
    branches: [main]
    paths:
      - 'packages/**'

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        # with:
        #   bun-version: 1.1.29
      - run: bun install --frozen-lockfile
      - run: bun run build
      - run: |
          mkdir -p ${{ github.workspace }}/packs
          for dir in $(ls packages); do
            (cd packages/$dir && bun pm pack --destination ${{ github.workspace }}/packs)
          done
      - uses: actions/upload-artifact@v4
        with:
          name: packs
          path: packs/*.tgz

  Typecheck:
    runs-on: ubuntu-latest
    env:
      RQB_SKIP_REACT_COMPILER: 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        # with:
        #   bun-version: 1.1.29
      - run: bun install --frozen-lockfile
      - run: bun run build
      - run: bun run typecheck

  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: oven-sh/setup-bun@v1
        # with:
        #   bun-version: 1.1.29
      - run: bun install --frozen-lockfile
      - run: bun run test
      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: oven-sh/setup-bun@v1
        # with:
        #   bun-version: 1.1.29
      - run: bun install --frozen-lockfile
      - run: bun --bun run lint

  Typecheck_React_18:
    name: Typecheck React 18
    needs: [Build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - uses: actions/download-artifact@v4
        with:
          name: packs
          path: packs
          merge-multiple: true
      - run: |
          TSC_FAILED=0
          for dir in $(find examples -mindepth 1 -maxdepth 1 -type d); do
            echo "$dir"
            if [ "$dir" != "examples/_template" ] \
            && [ "$dir" != "examples/basic" ] \
            && [ "$dir" != "examples/next" ]; then
              cd $dir
              echo "::group::Typechecking $dir with React 18"

              # Get list of all react-querybuilder packages
              RQB_PACKS=$(bun .github/get_pack_paths.ts)

              # Set all react dependencies to v18
              sed -i -E 's/("(@types\/)?react(-dom)?": ")\^?19.*"/\1^18"/g' ./package.json
              # Remove all react-querybuilder dependencies
              sed -i -E '/"@?react-querybuilder(\/\w+)?":/d' ./package.json

              # Install non-RQB dependencies
              bun install
              # Add all RQB packages (`-n 1` to add one at a time, otherwise get DependencyLoop errors)
              echo "$RQB_PACKS" | xargs -n 1 bun add

              # Typecheck
              bunx tsc --noEmit || TSC_FAILED=1

              echo "::endgroup::"
              cd ../..
            else
              echo "SKIPPING $dir"
            fi
            if [ $TSC_FAILED -ne 0 ]; then
              exit 1
            fi
          done
